{
  "type": "Program",
  "start": 0,
  "end": 94,
  "end": 329,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 0,
      "end": 74,
      "start": 0,
      "end": 113,
      "id": {
        "type": "Identifier",
        "start": 9,
        "end": 13,
        "name": "name"
        "start": 9,
        "end": 12,
        "name": "add"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 14,
          "end": 15,
          "name": "n"
          "start": 13,
          "end": 14,
          "name": "a"
        },
        {
          "type": "Identifier",
          "start": 17,
          "end": 18,
          "name": "m"
          "start": 16,
          "end": 17,
          "name": "b"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 20,
        "end": 74,
        "start": 19,
        "end": 113,
        "body": [
          {
            "type": "IfStatement",
            "start": 23,
            "end": 111,
            "test": {
              "type": "BinaryExpression",
              "start": 27,
              "end": 34,
              "left": {
                "type": "Identifier",
                "start": 27,
                "end": 28,
                "name": "a"
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "start": 33,
                "end": 34,
                "value": 0,
                "raw": "0"
              },
              "trueValue": 0,
              "falseValue": 6
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 36,
              "end": 111,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 42,
                  "end": 110,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 46,
                    "end": 51,
                    "left": {
                      "type": "Identifier",
                      "start": 46,
                      "end": 47,
                      "name": "b"
                    },
                    "operator": ">",
                    "right": {
                      "type": "Literal",
                      "start": 50,
                      "end": 51,
                      "value": 0,
                      "raw": "0"
                    },
                    "trueValue": 1,
                    "falseValue": -1
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 53,
                    "end": 110,
                    "body": [
                      {
                        "type": "IfStatement",
                        "start": 61,
                        "end": 109,
                        "test": {
                          "type": "LogicalExpression",
                          "start": 64,
                          "end": 88,
                          "left": {
                            "type": "LogicalExpression",
                            "start": 64,
                            "end": 74,
                            "left": {
                              "type": "BinaryExpression",
                              "start": 64,
                              "end": 67,
                              "left": {
                                "type": "Identifier",
                                "start": 64,
                                "end": 65,
                                "name": "a"
                              },
                              "operator": ">",
                              "right": {
                                "type": "Literal",
                                "start": 66,
                                "end": 67,
                                "value": 5,
                                "raw": "5"
                              },
                              "trueValue": 6,
                              "falseValue": 4
                            },
                            "operator": "&&",
                            "right": {
                              "type": "BinaryExpression",
                              "start": 71,
                              "end": 74,
                              "left": {
                                "type": "Identifier",
                                "start": 71,
                                "end": 72,
                                "name": "b"
                              },
                              "operator": ">",
                              "right": {
                                "type": "Literal",
                                "start": 73,
                                "end": 74,
                                "value": 5,
                                "raw": "5"
                              },
                              "trueValue": 6,
                              "falseValue": 4
                            }
                          },
                          "operator": "||",
                          "right": {
                            "type": "LogicalExpression",
                            "start": 78,
                            "end": 88,
                            "left": {
                              "type": "BinaryExpression",
                              "start": 78,
                              "end": 81,
                              "left": {
                                "type": "Identifier",
                                "start": 78,
                                "end": 79,
                                "name": "a"
                              },
                              "operator": "<",
                              "right": {
                                "type": "Literal",
                                "start": 80,
                                "end": 81,
                                "value": 5,
                                "raw": "5"
                              },
                              "trueValue": 4,
                              "falseValue": 6
                            },
                            "operator": "&&",
                            "right": {
                              "type": "BinaryExpression",
                              "start": 85,
                              "end": 88,
                              "left": {
                                "type": "Identifier",
                                "start": 85,
                                "end": 86,
                                "name": "b"
                              },
                              "operator": "<",
                              "right": {
                                "type": "Literal",
                                "start": 87,
                                "end": 88,
                                "value": 5,
                                "raw": "5"
                              },
                              "trueValue": 4,
                              "falseValue": 6
                            }
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "start": 90,
                          "end": 109,
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "start": 96,
                              "end": 105,
                              "argument": {
                                "type": "Identifier",
                                "start": 103,
                                "end": 104,
                                "name": "b"
                              }
                            }
                          ]
                        },
                        "alternate": null
                      }
                    ]
                  },
                  "alternate": null
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "start": 115,
      "end": 158,
      "id": {
        "type": "Identifier",
        "start": 124,
        "end": 132,
        "name": "subtract"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 133,
          "end": 134,
          "name": "a"
        },
        {
          "type": "Identifier",
          "start": 136,
          "end": 137,
          "name": "b"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 139,
        "end": 158,
        "body": [
          {
            "type": "ReturnStatement",
            "start": 143,
            "end": 156,
            "argument": {
              "type": "BinaryExpression",
              "start": 150,
              "end": 155,
              "left": {
                "type": "Identifier",
                "start": 150,
                "end": 151,
                "name": "a"
              },
              "operator": "-",
              "right": {
                "type": "Identifier",
                "start": 154,
                "end": 155,
                "name": "b"
              }
            }
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "start": 205,
      "end": 329,
      "id": {
        "type": "Identifier",
        "start": 214,
        "end": 225,
        "name": "checkNumber"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 226,
          "end": 229,
          "name": "num"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 231,
        "end": 329,
        "body": [
          {
            "type": "IfStatement",
            "start": 24,
            "end": 72,
            "start": 235,
            "end": 287,
            "test": {
              "type": "LogicalExpression",
              "start": 28,
              "end": 46,
              "start": 239,
              "end": 257,
              "left": {
                "type": "BinaryExpression",
                "start": 28,
                "end": 37,
                "start": 239,
                "end": 246,
                "left": {
                  "type": "Identifier",
                  "start": 28,
                  "end": 29,
                  "name": "n"
                  "start": 239,
                  "end": 242,
                  "name": "num"
                },
                "operator": "==",
                "right": {
                  "type": "Literal",
                  "start": 33,
                  "end": 37,
                  "value": "hi",
                  "raw": "\"hi\""
                  "start": 245,
                  "end": 246,
                  "value": 3,
                  "raw": "3"
                },
                "trueValue": "hi",
                "falseValue": "String0.752261665160151"
              },
              "operator": "===",
              "right": {
                "type": "BinaryExpression",
                "start": 41,
                "end": 46,
                "start": 250,
                "end": 257,
                "left": {
                  "type": "Identifier",
                  "start": 41,
                  "end": 42,
                  "name": "m"
                  "start": 250,
                  "end": 253,
                  "name": "num"
                },
                "operator": ">",
                "right": {
                  "type": "Literal",
                  "start": 45,
                  "end": 46,
                  "value": 3,
                  "raw": "3"
                  "start": 256,
                  "end": 257,
                  "value": 2,
                  "raw": "2"
                },
                "trueValue": 4,
                "falseValue": 2
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 48,
              "end": 72,
              "start": 259,
              "end": 287,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 54,
                  "end": 68,
                  "test": {
                    "type": "Identifier",
                    "start": 58,
                    "end": 59,
                    "name": "m"
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 61,
                    "end": 68,
                    "body": []
                  },
                  "alternate": null,
                  "trueValue": true,
                  "falseValue": false
                  "type": "ReturnStatement",
                  "start": 265,
                  "end": 283,
                  "argument": {
                    "type": "Literal",
                    "start": 272,
                    "end": 282,
                    "value": "Negative",
                    "raw": "\"Negative\""
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "start": 76,
      "end": 94,
      "id": {
        "type": "Identifier",
        "start": 85,
        "end": 87,
        "name": "hi"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 90,
        "end": 94,
        "body": []
          },
          {
            "type": "IfStatement",
            "start": 290,
            "end": 327,
            "test": {
              "type": "BinaryExpression",
              "start": 293,
              "end": 300,
              "left": {
                "type": "Identifier",
                "start": 293,
                "end": 296,
                "name": "num"
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 299,
                "end": 300,
                "value": 5,
                "raw": "5"
              },
              "trueValue": 6,
              "falseValue": 5
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 302,
              "end": 327,
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 308,
                  "end": 323,
                  "argument": {
                    "type": "Literal",
                    "start": 315,
                    "end": 322,
                    "value": "peeoo",
                    "raw": "\"peeoo\""
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}